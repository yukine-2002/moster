{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","data","id","name","email","CardlistData","map","a","SearcgBox","placeholder","Handle","type","onChange","App","state","monster","searchFiled","fetch","then","response","json","setState","this","filterData","filter","value","toLowerCase","includes","toLocaleLowerCase","e","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEaA,EAAO,SAACC,GAAD,OACd,sBAAKC,UAAW,eAAhB,UACE,qBAAKC,IAAI,kBAAkBC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BAE9B,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,YCHVC,G,KAAe,SAACR,GAEzB,OAAS,qBAAKC,UAAU,YAAf,SACPD,EAAMI,KAAKK,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAkBN,KAAMM,GAAZA,EAAEL,WCJ3BM,EAAY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAYC,EAAY,EAAZA,OACpC,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAeA,EAAaG,SAAWF,KCgC1EG,E,kDA9Bb,aAAc,IAAD,8BAEX,gBAEKC,MAAQ,CACXC,QAAU,GACVC,YAAc,IANL,E,qDAUb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GAAI,OAAI,EAAKoB,SAAS,CAACN,QAASd,S,oBAGxC,WAAS,IAAD,OACR,EAA8BqB,KAAKR,MAA5BC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,YACTO,EAAaR,EAAQS,QACzB,SAACC,GAAD,OAAWA,EAAMtB,KAAKuB,cAAcC,SAASX,EAAYY,wBAEzD,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWW,YAAc,iBAAiBC,OAAU,SAACmB,GAAD,OAAO,EAAKR,SAAW,CAAEL,YAAca,EAAEC,OAAOL,WACpG,cAAC,EAAD,CAAexB,KAAQsB,W,GA1BbQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.95e7cde8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Card = (props) => (\r\n    ( <div className =\"card-content\" >\r\n        <img alt=\"props.data.name\" src={`https://robohash.org/${props.data.id}?set=set2&size=180x180`}/>\r\n\r\n        <h2>{props.data.name}</h2>\r\n        <p>{props.data.email}</p>\r\n        </div>)\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.content.css'\r\n\r\nexport const CardlistData = (props) => {\r\n\r\n    return ( <div className='card-list'> \r\n    { props.data.map(a => <Card key ={a.id} data={a} />) }\r\n     </div>)\r\n}\r\n    \r\n","import React from 'react';\r\nimport '../card-list/card-list.content.css';\r\n\r\nexport const SearcgBox = ({placeholder,Handle}) => {\r\n   return <input className='search' type=\"search\" placeholder = {placeholder} onChange ={Handle}  />\r\n}","import { Component } from 'react';\nimport './App.css';\nimport {CardlistData} from './component/card-list/card-list.component';\nimport {SearcgBox} from './component/searchBox/searchBox.component';\nclass App extends Component{\n\n  constructor(){\n\n    super();\n\n    this.state = {\n      monster : [],\n      searchFiled : ''\n    }\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({monster: data}))\n  }\n\n  render(){\n  const {monster,searchFiled} = this.state;\n  const filterData = monster.filter(\n    (value) => value.name.toLowerCase().includes(searchFiled.toLocaleLowerCase())\n  )\n    return (\n      <div className=\"App\">\n        <SearcgBox placeholder = \"search Monster\" Handle ={ (e) => this.setState ( { searchFiled : e.target.value } ) } />\n        <CardlistData  data = {filterData} />\n      </div>\n    );\n  }\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}